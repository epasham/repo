# Basic info
replicaCount: 1

image:
  repository: streamreactor/rethink
  tag: 1.2.2
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# javaHeap options    
javaHeap: 256M

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

podManagementPolicy: OrderedReady

# kafka ssl
# The key and truststores file data are the base64 encoded contents of the files. YOU MUST PROVIDE THE DATA BASE64 encoded
# and added to the kafka secret and mounted into /mnt/connector-secrets
kafka:
  # replicationFactor for connect topics
  replicationFactor: 3
  securityProtocol:
  ssl:
    enabled: false
    trustStoreFileData:
    trustStorePassword:
    keyStoreFileData:
    keyStorePassword:
  sasl:
    enabled: false
    # keyTabData is the contents kerberos keytab file is using kerberos
    keyTabData: |-
          
    # jaasFileData is the contents of the kafka jaas file
    jaasFileData: |-
       
    #GSSAPI, SCRAM or PLAIN
    mechanism: GSSAPI
    # kerberos krb5 contents
    krb5Conf: |-

  bootstrapServers: 
    - name: kafka
      port: 9092
      sslPort: 9093
      saslSslPort: 9094
      saslPlainTextPort: 9095       

schemaRegistries:
  enabled: true
  hosts:
    - host: schema-registry
      protocol: http
      port: 8081
      jmxPort: 9102    

# secretsProvider is either env (k8), vault (hashicorp) or azure (keyvault)
secretsProvider: env

# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConverter: "io.confluent.connect.avro.AvroConverter"

# connectorClass class name of the connector
connectorClass: "com.datamountaineer.streamreactor.connect.rethink.source.ReThinkSourceConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# kcql The KCQL expression for the connector. type: STRING importance: HIGH
kcql: "__REQUIRED__"

# host Rethink server host. type: STRING importance: HIGH
host: localhost

# db The reThink database to read from. type: STRING importance: HIGH
db: connect_rethink_sink

# port Client port of rethink server to connect to. type: INT importance: MEDIUM
port: 28015

# lingerMs The number of milliseconds to wait before flushing the received messages to Kafka. The records willbe flushed if the batch size is reached before the linger period has expired. type: LONG importance: MEDIUM
lingerMs: 5000

# rethinkUsername The user name to connect to rethink with. type: STRING importance: MEDIUM
rethinkUsername: 

# password stored the secert for the password for the user. type: PASSWORD importance: MEDIUM
password: "__REQUIRED__"

# tlsEnabled enabled tls
tlsEnabled: false

# rethinkCertFile Certificate file (PEM format) data to use for secure TLS connection to the rethinkdb servers, mount from via secrets. Cannot be used with username/password. type: STRING importance: MEDIUM
rethinkCertFileData: |-

# rethinkAuth password stored in the secert. For authorization key to use in combination with the certificate file. type: PASSWORD importance: MEDIUM
rethinkAuth: ""

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
progressEnabled: true




