{{- if or .Release.IsInstall .Values.stardog.users }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "stardog.fullname" . }}-add-users
  labels:
    app.kubernetes.io/name: {{ include "stardog.name" $ }}
    app.kubernetes.io/component: config
    helm.sh/chart: {{ include "stardog.chart" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade,post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "stardog.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      imagePullSecrets:
      {{- if .Values.image.existingPullSecret }}
        - name: {{ .Values.image.existingPullSecret }}
      {{- else }}
        - name: {{ template "stardog.fullname" . }}-pullsecret
      {{- end }}
      containers:
      - name: manage-users
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: STARDOG_JAVA_ARGS
          value: -XX:ParallelGCThreads=1
        - name: STARDOG_ADMIN_PW
          valueFrom:
            secretKeyRef:
              name: {{ include "stardog.fullname" . }}-user-passwords
              key: admin
        - name: STARDOG_SERVER_URL
          value: http://{{ include "stardog.fullname" $ }}:5820
        {{- range .Values.stardog.users }}
        - name: {{ .name | upper | replace "-" "_" }}
          valueFrom:
            secretKeyRef:
              name: {{ include "stardog.fullname" $ }}-user-passwords
              key: {{ .name }}
        {{ end }}
        command:
        - /bin/sh
        - -ce
        - |
          echo "Testing stardog connectivity to ${STARDOG_SERVER_URL}"
          until $(curl -o /dev/null -s -f "${STARDOG_SERVER_URL}/admin/alive"); do sleep 1 && echo "."; done

          {{- if .Release.IsInstall }}
          echo Disable anonymous user
          /opt/stardog/bin/stardog-admin --server "${STARDOG_SERVER_URL}" user disable anonymous
          echo Changing admin password
          /opt/stardog/bin/stardog-admin --server "${STARDOG_SERVER_URL}" user passwd --new-password "$STARDOG_ADMIN_PW"
          echo
          {{- end }}
          {{ range .Values.stardog.users }}
          {{- $pwEnv := .name | upper | replace "-" "_"}}
          echo Adding user {{ .name }} to stardog
          /opt/stardog/bin/stardog-admin --server "${STARDOG_SERVER_URL}" user add --new-password {{ print "\"${" $pwEnv "}\"" }} --passwd "${STARDOG_ADMIN_PW}" {{ .name }} || \
          echo User already exists - setting password && \
          /opt/stardog/bin/stardog-admin --server "${STARDOG_SERVER_URL}" user passwd --new-password {{ print "\"${" $pwEnv "}\"" }} --passwd "${STARDOG_ADMIN_PW}" {{ .name }}
          echo
          {{ end }}
{{- end }}
