{{ if .Values.tracing.enabled}}
  {{ if eq .Values.tracing.provider "jaeger"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tracing.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.tracing.provider }}
    app.kubernetes.io/name: {{ .Values.tracing.provider }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: tracing
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.tracing.provider }}
  template:
    metadata:
      labels:
        app: {{ .Values.tracing.provider }}
        app.kubernetes.io/name: {{ .Values.tracing.provider }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
        app.kubernetes.io/component: tracing
        app.kubernetes.io/part-of: {{ include "backyards.name" . }}
        helm.sh/chart: {{ include "backyards.chart" . }}
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
{{- if .Values.tracing.contextPath }}
        prometheus.io/path: "{{ .Values.tracing.contextPath }}/metrics"
{{- else }}
        prometheus.io/path: "/{{ .Values.tracing.provider }}/metrics"
{{- end }}
    spec:
      containers:
        - name: {{ .Values.tracing.provider }}
          image: "{{ .Values.tracing.jaeger.image.repository }}:{{ .Values.tracing.jaeger.image.tag }}"
          imagePullPolicy: {{ .Values.tracing.jaeger.image.pullPolicy | default "Always" }}
          ports:
            - containerPort: 9411
            - containerPort: 16686
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          {{- if eq .Values.tracing.jaeger.spanStorageType "badger" }}
          - name: BADGER_EPHEMERAL
            value: "false"
          - name: SPAN_STORAGE_TYPE
            value: "badger"
          - name: BADGER_DIRECTORY_VALUE
            value: "/badger/data"
          - name: BADGER_DIRECTORY_KEY
            value: "/badger/key"
          {{- end }}
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "9411"
          - name: MEMORY_MAX_TRACES
            value: "{{ .Values.tracing.jaeger.memory.max_traces }}"
          - name: QUERY_BASE_PATH
            value: {{ if .Values.tracing.contextPath }} {{ .Values.tracing.contextPath }} {{ else }} /{{ .Values.tracing.provider }} {{ end }}
          livenessProbe:
            httpGet:
              path: /
              port: 16686
          readinessProbe:
            httpGet:
              path: /
              port: 16686
{{- if eq .Values.tracing.jaeger.spanStorageType "badger" }}
          volumeMounts:
          - name: data
            mountPath: /badger
{{- end }}
          resources:
{{- if .Values.tracing.jaeger.resources }}
            {{ toYaml .Values.tracing.jaeger.resources | nindent 12 }}
{{- else }}
            {{ toYaml .Values.resources | nindent 12 }}
{{- end }}
{{- if eq .Values.tracing.jaeger.spanStorageType "badger" }}
      volumes:
      - name: data
{{- if .Values.tracing.jaeger.persist }}
        persistentVolumeClaim:
          claimName: {{ include "backyards.name" . }}-jaeger-pvc
{{- else }}
        emptyDir: {}
{{- end }}
{{- end }}
{{ end }}
{{ end }}
