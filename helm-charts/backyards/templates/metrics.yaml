apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: {{ printf "%s-%s" (include "backyards.fullname" .) "requestcount" }}
  namespace: {{ .Values.istio.namespace }}
  labels:
    app: {{ include "backyards.name" . }}
    app.kubernetes.io/name: {{ include "backyards.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
spec:
  compiledTemplate: metric
  params:
    monitored_resource_type: '"UNSPECIFIED"'
    value: "1"
    dimensions:
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
      source_app: source.labels["app"] | "unknown"
      source_cluster_id: conditional((source.cluster.id | "unknown") != "unknown", source.cluster.id, "master")
      source_version: source.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_app: destination.labels["app"] | "unknown"
      destination_cluster_id: conditional((destination.cluster.id | "unknown") != "unknown", destination.cluster.id, "master")
      destination_version: destination.labels["version"] | "unknown"
      request_protocol: api.protocol | context.protocol | "unknown"
      security_policy: conditional((context.reporter.kind | "inbound") == "outbound", "unknown", conditional(connection.mtls | false, "mutual_tls", "none"))
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "source", "destination")
      response_code: response.code | 200
---
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: {{ printf "%s-%s" (include "backyards.fullname" .) "requestduration" }}
  namespace: {{ .Values.istio.namespace }}
  labels:
    app: {{ include "backyards.name" . }}
    app.kubernetes.io/name: {{ include "backyards.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
spec:
  compiledTemplate: metric
  params:
    monitored_resource_type: '"UNSPECIFIED"'
    value: response.duration | "0ms"
    dimensions:
      connection_security_policy: conditional((context.reporter.kind | "inbound") == "outbound", "unknown", conditional(connection.mtls | false, "mutual_tls", "none"))
      destination_app: destination.labels["app"] | "unknown"
      destination_cluster_id: conditional((destination.cluster.id | "unknown") != "unknown", destination.cluster.id, "master")
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      permissive_response_code: rbac.permissive.response_code | "none"
      permissive_response_policyid: rbac.permissive.effective_policy_id | "none"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "source", "destination")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      response_flags: context.proxy_error_code | "-"
      source_app: source.labels["app"] | "unknown"
      source_cluster_id: conditional((source.cluster.id | "unknown") != "unknown", source.cluster.id, "master")
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"

---
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: {{ include "backyards.fullname" . }}
  namespace: {{ .Values.istio.namespace }}
  labels:
    app: {{ include "backyards.name" . }}
    app.kubernetes.io/name: {{ include "backyards.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
spec:
  compiledAdapter: prometheus
  params:
    metrics:
    - name: backyards_requests_total # Prometheus metric name
      instance_name: {{ printf "%s-%s.%s.%s" (include "backyards.fullname" .) "requestcount" "instance" .Values.istio.namespace }}
      kind: COUNTER
      label_names:
        - source_workload
        - source_workload_namespace
        - source_app
        - source_cluster_id
        - source_version
        - destination_workload
        - destination_workload_namespace
        - destination_service_name
        - destination_service_namespace
        - destination_app
        - destination_cluster_id
        - destination_version
        - request_protocol
        - security_policy
        - reporter
        - response_code
    - name: backyards_request_duration_seconds
      instance_name: {{ printf "%s-%s.%s.%s" (include "backyards.fullname" .) "requestduration" "instance" .Values.istio.namespace }}
      kind: DISTRIBUTION
      label_names:
        - reporter
        - source_app
        - source_principal
        - source_workload
        - source_workload_namespace
        - source_version
        - source_cluster_id
        - destination_app
        - destination_principal
        - destination_workload
        - destination_workload_namespace
        - destination_version
        - destination_service
        - destination_service_name
        - destination_service_namespace
        - destination_cluster_id
        - connection_security_policy
        - response_flags
        - request_protocol
        - response_code
        - permissive_response_code
        - permissive_response_policyid
      buckets:
        explicit_buckets:
          bounds:
            - 0.005
            - 0.01
            - 0.025
            - 0.05
            - 0.1
            - 0.25
            - 0.5
            - 1
            - 2.5
            - 5
            - 10
---
# Rule to send metric instances to a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: {{ include "backyards.fullname" . }}
  namespace: {{ .Values.istio.namespace }}
  labels:
    app: {{ include "backyards.name" . }}
    app.kubernetes.io/name: {{ include "backyards.name" . }}
    helm.sh/chart: {{ include "backyards.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ include "backyards.name" . }}
spec:
  actions:
  - handler: {{ include "backyards.fullname" . }}
    instances:
    - {{ printf "%s-%s.%s.%s" (include "backyards.fullname" .) "requestcount" "instance" .Values.istio.namespace }}
    - {{ printf "%s-%s.%s.%s" (include "backyards.fullname" .) "requestduration" "instance" .Values.istio.namespace }}
