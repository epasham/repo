# Basic info
replicaCount: 1

image:
  repository: streamreactor/jms
  tag: 1.2.2
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi

# javaHeap options    
javaHeap: 256M

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

podManagementPolicy: OrderedReady

# kafka ssl
# The key and truststores file data are the base64 encoded contents of the files. YOU MUST PROVIDE THE DATA BASE64 encoded
# and added to the kafka secret and mounted into /mnt/connector-secrets
kafka:
  # replicationFactor for connect topics
  replicationFactor: 3
  securityProtocol:
  ssl:
    enabled: false
    trustStoreFileData:
    trustStorePassword:
    keyStoreFileData:
    keyStorePassword:
  sasl:
    enabled: false
    # keyTabData is the contents kerberos keytab file is using kerberos
    keyTabData: |-
           
    # jaasFileData is the contents of the kafka jaas file
    jaasFileData: |-
          
    #GSSAPI, SCRAM or PLAIN
    mechanism: GSSAPI
    # kerberos krb5 contents
    krb5Conf: |-

  bootstrapServers: 
    - name: kafka
      port: 9092
      sslPort: 9093
      saslSslPort: 9094
      saslPlainTextPort: 9095       

schemaRegistries:
  enabled: true
  hosts:
    - host: schema-registry
      protocol: http
      port: 8081
      jmxPort: 9102    

# secretsProvider is either env (k8), vault (hashicorp) or azure (keyvault)
secretsProvider: env
 
# clusterName The connect cluster name. This is the consumer group id for the backing topics
clusterName: "__REQUIRED__"

# restPort The rest port of Connect
restPort: 8083

# logLevel The log4j level
logLevel: INFO

# keyConverter The key converter to/from Connects struct
keyConverter: "io.confluent.connect.avro.AvroConverter"

# valueConverter The key converter to/from Connects struct
valueConverter: "io.confluent.connect.avro.AvroConverter"

# connectorClass
connectorClass: "com.datamountaineer.streamreactor.connect.jms.source.JMSSourceConnector"

# applicationId name of the connector
applicationId: "__REQUIRED__"

# batchSize The number of records to poll for on the target JMS destination in each Connect poll. type: INT importance: MEDIUM
batchSize: 100

# kcql connect.jms.kcql type: STRING importance: HIGH
kcql: "__REQUIRED__"

# username Provides the user for the JMS connection type: STRING importance: HIGH
username: 

# password stored in the secret. Provides the password for the JMS connection type: PASSWORD importance: HIGH
password: "__REQUIRED__"

# url Provides the JMS broker url type: STRING importance: HIGH
url: "__REQUIRED__"

# connectionFactory Provides the full class name for the ConnectionFactory implementation to use, e.gorg.apache.activemq.ActiveMQConnectionFactory type: STRING importance: HIGH
connectionFactory: ConnectionFactory

# subscriptionName subscription name to use when subscribing to a topic, specifying this makes a durable subscription for topics type: STRING importance: HIGH
subscriptionName: 

# initialContextExtraParams List (comma separated) of extra properties as key/value pairs with a colon delimiter to supply to the initial context e.g. SOLACE_JMS_VPN:my_solace_vp type: LIST importance: MEDIUM
initialContextExtraParams: 

# converterThrowOnError 
#  If set to false the conversion exception will be swallowed and everything carries on BUT the message is lost!!;
#  true will throw the exception.Default is false.
#      type: BOOLEAN importance: HIGH
converterThrowOnError: false

# initialContextFactory Initial Context Factory, e.g: org.apache.activemq.jndi.ActiveMQInitialContextFactory type: STRING importance: HIGH
initialContextFactory: "__REQUIRED__"

# destinationSelector Selector to use for destination lookup. Either CDI or JNDI. type: STRING importance: MEDIUM
destinationSelector: CDI

# sourceDefaultConverter 
# Contains a canonical class name for the default converter of a raw JMS message bytes to a SourceRecord.
# Overrides to the default can be done by using connect.jms.source.converters still.
# i.e. com.datamountaineer.streamreactor.connect.source.converters.AvroConverter type: STRING importance: HIGH
sourceDefaultConverter: 

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
progressEnabled: true



