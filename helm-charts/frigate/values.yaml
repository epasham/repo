# Default values for frigate.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

image:
  repository: blakeblackshear/frigate
  tag: 0.2.0
  pullPolicy: IfNotPresent

rtspPassword: password

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# frigate configuration - see https://github.com/blakeblackshear/frigate/blob/master/config/config.yml for example
config: |
  mqtt:
    host: mqtt.server.com
    topic_prefix: frigate
  #  user: username # Optional -- Uncomment for use
  #  password: password # Optional -- Uncomment for use

  cameras:
    back:
      rtsp:
        user: viewer
        host: 10.0.10.10
        port: 554
        # values that begin with a "$" will be replaced with environment variable
        password: $RTSP_PASSWORD
        path: /cam/realmonitor?channel=1&subtype=2

      ################
      ## Optional mask. Must be the same dimensions as your video feed.
      ## The mask works by looking at the bottom center of the bounding box for the detected
      ## person in the image. If that pixel in the mask is a black pixel, it ignores it as a
      ## false positive. In my mask, the grass and driveway visible from my backdoor camera
      ## are white. The garage doors, sky, and trees (anywhere it would be impossible for a
      ## person to stand) are black.
      ################
      # mask: back-mask.bmp

      ################
      # Allows you to limit the framerate within frigate for cameras that do not support
      # custom framerates. A value of 1 tells frigate to look at every frame, 2 every 2nd frame,
      # 3 every 3rd frame, etc.
      ################
      take_frame: 1

      ################
      # Optional hardware acceleration parameters for ffmpeg. If your hardware supports it, it can
      # greatly reduce the CPU power used to decode the video stream. You will need to determine which
      # parameters work for your specific hardware. These may work for those with Intel hardware that
      # supports QuickSync.
      ################
      # ffmpeg_hwaccel_args:
      #   - -hwaccel
      #   - vaapi
      #   - -hwaccel_device
      #   - /dev/dri/renderD128
      #   - -hwaccel_output_format
      #   - yuv420p

      regions:
        - size: 350
          x_offset: 0
          y_offset: 300
          min_person_area: 5000
          threshold: 0.5
        - size: 400
          x_offset: 350
          y_offset: 250
          min_person_area: 2000
          threshold: 0.5
        - size: 400
          x_offset: 750
          y_offset: 250
          min_person_area: 2000
          threshold: 0.5

service:
  type: ClusterIP
  port: 5000
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  loadBalancerIP:
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}
