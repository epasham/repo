apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: {{ template "cluster-agent.fullname" . }}
spec: 
  replicas: 1
  template: 
    metadata: 
      annotations: 
        appd-agent-id: appdynamics-cluster-agent
      labels:
        app: {{ template "cluster-agent.name" . }}
        chart: {{ template "cluster-agent.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    restartPolicy: Always
    spec: 
      containers: 
        - env: 
            {{- if .Values.controller.controllerKey }}
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom: 
                secretKeyRef: 
                  key: controller-key
                  name: cluster-agent-secret
            {{- end }}
            {{- if .Values.controller.eventKey }}
            - name: APPDYNAMICS_EVENT_ACCESS_KEY
              valueFrom: 
                secretKeyRef: 
                  key: event-key
                  name: cluster-agent-secret
            {{- end }}
            - name: APPDYNAMICS_REST_API_CREDENTIALS
              valueFrom: 
                secretKeyRef: 
                  key: api-user
                  name: cluster-agent-secret
            - name: APPDYNAMICS_AGENT_NAMESPACE
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.namespace
            {{- range $key, $value := .Values.deployment.envValueFromConfigMap }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ default (include "cluster-agent.fullname" $) $value.name }}
                  {{- if $value.key }}
                  key: {{ required "Must specify key!" $value.key }}
                  {{- end}}
            {{- end }}
            {{- if .Values.deployment.envFromConfigMap }}
            envFrom:
            {{- range $value := .Values.deployment.envFromConfigMap }}
            - configMapRef:
                name: {{ $value }}
            {{- end }}
            {{- end }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          name: {{ .Chart.Name }}
          ports: 
            - containerPort: {{ .Values.deployment.port }}
              protocol: TCP
          resources:
{{- if .Values.deployment.resources }}
{{ toYaml .Values.deployment.resources | indent 10 }}
{{- else if .Values.resources }}
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
          volumeMounts: 
            - mountPath: /opt/appdynamics/config/
              name: agent-config
      serviceAccountName: appdynamics-operator
      volumes: 
        - configMap: 
            name: cluster-agent-config
          name: agent-config

