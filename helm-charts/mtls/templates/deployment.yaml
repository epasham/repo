apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mtls.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mtls.name" . }}
    helm.sh/chart: {{ include "mtls.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mtls.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mtls.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- if and .Values.secrets.enabled .Values.secrets.hasPassword }}
            - name: CA_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mtls.fullname" . }}-cert-password
                  key: password
          {{- else if .Values.existingSecretPassword }}
            - name: CA_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecretPassword }}
                  key: password
          {{- end }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /home/mtls/config.ini
              subPath: config.ini
            {{- if or .Values.existingSecret .Values.secrets.enabled }}
            - name: ca-creds
              mountPath: /home/mtls/secrets/certs/authority
              readOnly: false
            {{- end }}
            {{- if .Values.user_seeds }}
            - name: user-seeds
              mountPath: /tmp/seeds/user
            {{- end }}
            {{- if .Values.admin_seeds }}
            - name: admin-seeds
              mountPath: /tmp/seeds/admin
            {{- end }}
            {{- if .Values.persistence.sqlite3.enabled }}
            - name: persistence
              mountPath: /home/mtls/database
              subPath: database
              readOnly: false
            {{- end }}
            {{- if .Values.persistence.user_gnupg.enabled }}
            - name: persistence
              mountPath: {{ .Values.config.gnupg.user }}
              subPath: {{ .Values.persistence.user_gnupg.subPath | default "gnupg" }}
              readOnly: false
            {{- end }}
            {{- if .Values.persistence.admin_gnupg.enabled }}
            - name: persistence
              mountPath: {{ .Values.config.gnupg.admin }}
              subPath: {{ .Values.persistence.admin_gnupg.subPath | default "admin_gnupg" }}
              readOnly: false
            {{- end }}
          livenessProbe:
            httpGet:
              path: /version
              port: http
          readinessProbe:
            httpGet:
              path: /version
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mtls.fullname" . }}
            items:
              - key: config.ini
                path: config.ini
        {{- if or .Values.existingSecret .Values.secrets.enabled }}
        - name: ca-creds
          secret:
            {{- if .Values.existingSecret }}
            secretName: {{ .Values.existingSecret }}
            {{- else }}
            secretName: {{ include "mtls.fullname" . }}-certs
            {{- end }}
            items:
              - key: ca.key
                path: RootCA.key
              - key: ca.crt
                path: RootCA.pem
        {{- end }}
        {{- if .Values.user_seeds }}
        - name: user-seeds
          configMap:
            name: {{ include "mtls.fullname" . }}-user-seeds
        {{- end }}
        {{- if .Values.admin_seeds }}
        - name: admin-seeds
          configMap:
            name: {{ include "mtls.fullname" . }}-admin-seeds
        {{- end }}
        {{- if or (or .Values.persistence.user_gnupg.enabled .Values.persistence.admin_gnupg.enabled) .Values.persistence.sqlite3.enabled }}
        - name: persistence
          persistentVolumeClaim:
            claimName: {{ template "mtls.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
