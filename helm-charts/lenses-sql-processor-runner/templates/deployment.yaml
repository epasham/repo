apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    app: {{ include "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    lenses.io/app: {{ include "fullname" . }}
    lenses.io/app.type: lenses-processor
    lenses.io/pipeline: {{ .Values.monitoring.pipeline | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "fullname" . }}
        hostPort: {{ .Values.port | quote }}
        containerPort: {{ .Values.port | quote }}
        lenses.io/app: {{ include "fullname" . }}
        lenses.io/app.type: lenses-processor
        lenses.io/pipeline: {{ .Values.monitoring.pipeline | quote }}
      annotations:
        prometheus.io/scrape: {{ .Values.monitoring.enabled | quote }}
        prometheus.io/port: {{ .Values.monitoring.port | quote }}
        prometheus.io/path: {{ .Values.monitoring.path | quote }}
    spec:   
      volumes:     
        - name: kafka-secrets
          secret:
            secretName: {{ include "fullname" . }}-kafka-secrets
            items:
              - key: client.keystore.jks
                path: client.keystore.jks
              - key: client.truststore.jks 
                path: client.truststore.jks
              - key: jaas.conf
                path: jaas.conf
              - key: keytab
                path: keytab  
        - name: krb
          configMap:
            name: {{ include "fullname" . | quote }}
      serviceAccountName: {{ .Values.serviceAccount }}  
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.port }}
        lifecycle:
          preStop:
            exec:
              command:
              - /etc/landoop/processor-stop
        livenessProbe:
          exec:
            command:
            - /etc/landoop/liveliness
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5        
        volumeMounts:
          - name: kafka-secrets
            mountPath: "/mnt/secrets"
          - name: krb
            mountPath: "/etc/krb5.conf"
            subPath: "krb5.conf"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: ROOT_LOG_LEVEL
          value: {{ .Values.monitoring.logLevel | quote }}
        - name: SQL
          value: |-
{{ .Values.sql | indent 12}}
        - name: SQL_BOOTSTRAP_SERVERS
          value: {{ include "bootstrapBrokers" . | quote }}
        - name: SQL_SCHEMA_REGISTRY_URL
          value: {{ include "registries" . | quote }}
        - name: SQL_APP_ID
          value: {{ include "appId" . | quote }}
        - name: SQL_STATE_STORE_DIR
          value: {{ .Values.stateStoreDir | quote }}
        - name: SQL_METRICS_TOPIC
          value: {{ include "metricTopic" . | quote }}
        - name: SQL_METRIC_FREQUENCY
          value: {{ .Values.metricsFrequency | quote }}
        - name: SQL_PORT
          value: {{ .Values.port | quote }}  
        - name: SQL_REGISTRY_PROVIDER
          value: {{ .Values.registryProvider | quote }} 
        - name: SECURITY_PROTOCOL
          value: {{ include "securityProtocol" . | quote }}             
        - name: SASL_MECHANISM
          value: {{ default "GSSAPI" .Values.kafka.sasl.mechanism | quote }} 
        - name: SSL_TRUSTSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks" 
        - name: SSL_KEYSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks" 
        - name: SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" . }}-kafka-secrets"
              key:  "client.truststore.password"           
        - name: SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" . }}-kafka-secrets"
              key:  "client.keystore.password"
        - name: SSL_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "fullname" . }}-kafka-secrets"
              key:  "client.key.password" 
       
        {{- if .Values.kafka.sasl.enabled -}}
        - name: JAVA_OPTS
          value: "-Djava.security.auth.login.config=/mnt/secrets/jaas.conf {{ .Values.javaOpts }}"   
        {{ else }}
        - name: JAVA_OPTS
          value: {{ .Values.javaOpts | quote }}  
        {{- end -}}                                           
        